<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        bxTTX6NuEPDkAAAAAElFTkSuQmCC
</value>
  </data>
</root>